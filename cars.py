#!/usr/bin/env python3
__author__ = "Ashad Nadeem Mahmudi"
__date__ = "9/6/2020"

import json
import locale
import sys
import os
import reports
import emails

def load_data(filename):
  """Loads the contents of filename as a JSON file."""
  with open(filename) as json_file:
    data = json.load(json_file)
  return data


def format_car(car):
  """Given a car dictionary, returns a nicely formatted name."""
  return "{} {} ({})".format(
      car["car_make"], car["car_model"], car["car_year"])


def process_data(data):
  """Analyzes the data, looking for maximums.

  Returns a list of lines that summarize the information.
  """
  locale.setlocale(locale.LC_ALL, 'en_US.UTF8')
  max_revenue = {"revenue": 0}
  maxTSale = 0
  maxTSale_car = {}
  max_car_year = {}
  for item in data:
    # Calculate the revenue generated by this model (price * total_sales)
    # We need to convert the price from "$1234.56" to 1234.56
    item_price = locale.atof(item["price"].strip("$"))
    item_revenue = item["total_sales"] * item_price
    if item_revenue > max_revenue["revenue"]:
      item["revenue"] = item_revenue
      max_revenue = item

    # TODO: also handle max sales
    if item["total_sales"] > maxTSale:
      maxTSale = item["total_sales"]
      maxTSale_car = item["car"]

    # TODO: also handle most popular car_year
    year = item["car"]["car_year"]
    if not year in max_car_year:
      max_car_year[year] = item["total_sales"]
    else:
      max_car_year[year] = max_car_year[year] + item["total_sales"]

  year = sorted(max_car_year, key=max_car_year.get)

  summary = [
    "The {} generated the most revenue: ${}".format(
      format_car(max_revenue["car"]), max_revenue["revenue"]),
        "The {} had the most sales: {}".format(format_car(maxTSale_car), maxTSale),
    "The most popular year was {} with {} sales.".format(year[-1], max_car_year[year[-1]])
  ]

  return summary


def cars_dict_to_table(car_data):
  """Turns the data in car_data into a list of lists."""
  table_data = [["ID", "Car", "Price", "Total Sales"]]
  for item in car_data:
    table_data.append([item["id"], format_car(item["car"]), item["price"], item["total_sales"]])
  return table_data


def main(argv):
  """Process the JSON data and generate a full report out of it."""
  data = load_data(os.path.join(os.getcwd(),"car_sales.json"))
  summary = process_data(data)
  # print(summary)
  # TODO: turn this into a PDF report
  additional_info = "<br/>".join(summary)
  table_data = cars_dict_to_table(data)
  reports.generate("cars.pdf", "", additional_info, table_data)
  # TODO: send the PDF report as an email attachment
  msg = emails.generate("automation@example.com",
                        "<user>@example.com",
                        "Sales summary for last month",
                        "\n".join(summary),
                        "cars.pdf")
  emails.send(msg)

if __name__ == "__main__":
  main(sys.argv)
